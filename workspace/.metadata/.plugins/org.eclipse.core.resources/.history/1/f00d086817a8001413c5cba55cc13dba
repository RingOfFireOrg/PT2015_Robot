package org.usfirst.frc.team3459.robot;

import edu.wpi.first.wpilibj.SampleRobot;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

public class Robot extends SampleRobot {
    RobotDrive myRobot;
    DoublePiston robotPiston = new DoublePiston(0, 1, 2, 3);
    
    Joystick leftStick;
    Joystick rightStick;
    JoystickButton pistonButton;
    
    Scheduler sch = new Scheduler();
    
    public Robot() {
        myRobot = new RobotDrive(0, 1);
        myRobot.setExpiration(0.1);
        leftStick = new Joystick(0);
        rightStick = new Joystick(1);
    }

    public void autonomous() {
    	long start = System.currentTimeMillis();
        
        sch.addEvent(2, start+1000, start+2000, () -> myRobot.drive(1,1), () -> myRobot.drive(0,0));
        sch.addEvent(2, start+2500, start+4000, () -> myRobot.drive(1,0), () -> myRobot.drive(0,0));
        sch.addEvent(2, start+4500, start+5500, () -> myRobot.drive(1,1), () -> myRobot.drive(0,0));
        
        while(isAutonomous()) {
            sch.update(System.currentTimeMillis());
        }
    }

    public void operatorControl() {
        myRobot.setSafetyEnabled(true);
        while (isOperatorControl() && isEnabled()) {
            myRobot.tankDrive(leftStick.getY(), rightStick.getY()); 
            Timer.delay(0.005);		// wait for a motor update time
            if(pistonButton.get())
            	sch.addEvent(robotPiston.pistonECEvent(0, 2000, true));
        }
    }
    
    public void test() { }
}
